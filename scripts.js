// üìã –ö–æ–ª–æ–Ω–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤
const objectColumns = [
  { title: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", field: "name", widthGrow: 2 },
  { title: "ID –æ–±—ä–µ–∫—Ç–∞", field: "objectId" },
  { title: "ID –û–ì–•", field: "oghId" },
  { title: "–ì–æ–¥", field: "year" },
  { title: "–û–∫—Ä—É–≥", field: "district" },
  { title: "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", field: "performer" },
  { title: "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π", field: "responsible" },
  { title: "–°—Ç–∞—Ç—É—Å", field: "status" },
  { title: "–ù–∞—á–∞–ª–æ", field: "startDate" },
  { title: "–û–∫–æ–Ω—á–∞–Ω–∏–µ", field: "endDate" },
  { title: "–ü—Ä–æ–≥—Ä–µ—Å—Å", field: "progress" }
];

// üìã –ö–æ–ª–æ–Ω–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
const documentColumns = [
  { title: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", field: "name", widthGrow: 2 },
  { title: "–ù–æ–º–µ—Ä", field: "docNumber" },
  { title: "–î–∞—Ç–∞", field: "uploadDate" },
  { title: "–¢–∏–ø", field: "docType" },
  { title: "ID –æ–±—ä–µ–∫—Ç–∞", field: "objectId" },
  { title: "–õ–∏—Å—Ç–æ–≤", field: "pageCount" },
  { title: "–õ–∏—Å—Ç ‚Ññ", field: "sheetNum" }
];

document.addEventListener("DOMContentLoaded", () => {
  // üìÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–±—ä–µ–∫—Ç–æ–≤
  const tableObjects = new Tabulator("#table-objects", {
    data: objectData,
    layout: "fitColumns",
    height: 600,
    placeholder: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
    dataTree: true,
    dataTreeStartExpanded: false,
    dataTreeChildField: "_children",
    dataTreeCollapseElement: "<span style='margin-right:6px;'>‚ñº</span>",
    dataTreeExpandElement: "<span style='margin-right:6px;'>‚ñ∂</span>",
    headerSort: false,
    columns: objectColumns
  });

  // üìé –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const tableDocuments = new Tabulator("#table-documents", {
    data: documentsData,
    columns: documentColumns,
    layout: "fitDataStretch",
    height: 500,
    placeholder: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
    pagination: false,
    groupBy: "objectId"
  });

  // üîÅ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
  document.querySelectorAll(".tab-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      document.querySelectorAll(".tab-btn").forEach(b => b.classList.remove("active"));
      document.querySelectorAll(".tab-section").forEach(tab => tab.classList.remove("active"));
      btn.classList.add("active");
      document.getElementById(btn.dataset.tab).classList.add("active");
    });
  });

  // üßæ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
  const objectFilterInputs = document.querySelectorAll("#tab-objects .top-bar input");
  objectFilterInputs.forEach(input => {
    input.addEventListener("input", () => {
      const filters = [];
      objectFilterInputs.forEach(i => {
        const field = i.id.replace("filter-", "");
        const value = i.value.trim();
        if (value) filters.push({ field, type: "like", value });
      });
      tableObjects.setFilter(filters);
    });
  });

  // üßæ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –±—É–¥—É—Ç input'—ã)
  const docFilterInputs = document.querySelectorAll("#tab-documents .top-bar input");
  docFilterInputs.forEach(input => {
    input.addEventListener("input", () => {
      const filters = [];
      docFilterInputs.forEach(i => {
        const field = i.dataset.field;
        const value = i.value.trim();
        if (field && value) filters.push({ field, type: "like", value });
      });
      tableDocuments.setFilter(filters);
    });
  });
});
