// –î–∞–Ω–Ω—ã–µ
const journalData = Array.from({ length: 6 }, (_, i) => ({
  objectTitle: `–û–±—ä–µ–∫—Ç ‚Ññ${i + 1}, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. ${10 + i}`,
  objectId: 100 + i,
  works: [
    {
      repairRange: "01.05‚Äì10.05",
      objectId: 100 + i,
      performer: "–û–û–û –†–µ–º–°—Ç—Ä–æ–π",
      contractor: "–ê–ª—å—Ñ–∞–°—Ç—Ä–æ–π",
      responsible: "–ò–≤–∞–Ω–æ–≤ –ò.–ò."
    },
    {
      repairRange: "11.05‚Äì15.05",
      objectId: 100 + i,
      performer: "–û–û–û –ì–∞–∑–æ–Ω–°–µ—Ä–≤–∏—Å",
      contractor: "–ê–ª—å—Ñ–∞–°—Ç—Ä–æ–π",
      responsible: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü."
    }
  ],
  documents: [
    {
      title: "–°—Ö–µ–º–∞ –≤–æ–¥–æ–æ—Ç–≤–µ–¥–µ–Ω–∏—è.pdf",
      type: "–°—Ö–µ–º–∞",
      uploadDate: "01.05.2024",
      responsible: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü."
    },
    {
      title: "–ê–∫—Ç –ø—Ä–∏—ë–º–∫–∏ ‚Ññ12.docx",
      type: "–ê–∫—Ç",
      uploadDate: "10.05.2024",
      responsible: "–°–∏–¥–æ—Ä–æ–≤ –°.–°."
    }
  ]
}));

// –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ Tabulator-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç
function transformToTabulator(data) {
  return data.map(obj => ({
    id: `obj-${obj.objectId}`,
    name: obj.objectTitle,
    type: "object",
    children: [
      ...obj.works.map((w, i) => ({
        id: `work-${obj.objectId}-${i}`,
        name: `üîß ${w.repairRange}`,
        objectId: w.objectId,
        performer: w.performer,
        contractor: w.contractor,
        responsible: w.responsible,
        type: "work"
      })),
      ...obj.documents.map((d, i) => ({
        id: `doc-${obj.objectId}-${i}`,
        name: `üìÑ ${d.title}`,
        docType: d.type,
        uploadDate: d.uploadDate,
        responsible: d.responsible,
        type: "document"
      }))
    ]
  }));
}

document.addEventListener("DOMContentLoaded", () => {
  const tableData = transformToTabulator(journalData);

  console.log("üëâ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã:", tableData); // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

  new Tabulator("#journalTable", {
    data: tableData,
    dataTree: true,
    dataTreeStartExpanded: true,
    layout: "fitColumns",
    height: "600px",
    placeholder: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è",
    columns: [
      { title: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", field: "name", widthGrow: 2 },
      { title: "ID –æ–±—ä–µ–∫—Ç–∞", field: "objectId", hozAlign: "center" },
      { title: "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", field: "performer" },
      { title: "–ü–æ–¥—Ä—è–¥—á–∏–∫", field: "contractor" },
      { title: "–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞", field: "docType" },
      { title: "–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏", field: "uploadDate" },
      { title: "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π", field: "responsible" }
    ],
    rowFormatter: function(row) {
      const type = row.getData().type;
      if (type === "work") {
        row.getElement().style.backgroundColor = "#e8f6ff";
      } else if (type === "document") {
        row.getElement().style.backgroundColor = "#f4f4f4";
      }
    }
  });
});
